---
title: "Extended Scenarios"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
```


```{r}
# pop_proj2 <- pop_proj %>%
#   dplyr::filter(Year %in% c(2020:2070)) %>%
#   dplyr::mutate(
#     Type = dplyr::if_else(Type=='high growth', "Driver_hi", "Driver_bu")) %>%
#   unique() %>%
#   tidyr::spread(., "Type", "Population")
# 
# 
# pop_proj2_start <- pop_proj2 %>%
#   dplyr::filter(Year==2020) %>%
#   dplyr::select(County, Driver_start=Driver_bu)
# 
# pop_proj_relative <- pop_proj2 %>% 
#   dplyr::left_join(pop_proj2_start, "County") %>%
#   dplyr::mutate(Driver_growth_bu = Driver_bu/Driver_start,
#                 Driver_growth_hi = Driver_hi/Driver_start) %>%
#   # dplyr::filter(Year != 2013) %>%
#   dplyr::select(-Driver_start, -Driver_bu, -Driver_hi)

```


```{r eval=F}
## Organizing the data like this makes it possible to create a plot,
## which I like, but it probably isn't great for display purposes.
## Maybe it is too complex or difficult to interpret.
pop_proj_plot <- pop_proj %>% dplyr::filter(
  !(Type=='Estimate' & Edition == '2021' & Year > 2009)) %>%
  dplyr::mutate(Type = dplyr::if_else(!is.na(Type2), Type2, Type)) %>%
  dplyr::mutate(Type = dplyr::if_else(
    Type == 'Estimate', "Estimate",
    dplyr::if_else(
      Type == 'SC RFA Projection' & Edition == '2019', '2019 RFA Projection',
      dplyr::if_else(
        Type == 'SC RFA Projection' & Edition == '2022', '2022 RFA Projection',
        dplyr::if_else(
          Scenario == 'High' & Edition == '2019', '2019 High Extrapolation',
          dplyr::if_else(
           Scenario == 'High' & Edition == '2022', '2022 High Extrapolation',
           dplyr::if_else(
              Scenario == 'Moderate' & Edition == '2019', '2019 Moderate Extrapolation',
              dplyr::if_else(
               Scenario == 'Moderate' & Edition == '2022', '2022 Moderate Extrapolation', 'NA')
              )))))))

# distinct(pop6b, Period, Scenario, Edition, Type, Type2)

# scales::show_col(viridis::turbo(9))

## estimate = '#30123BFF'
## new_moderate = '#466BE3FF'
## new_high = '#D23105FF'
## old_moderate = '#28BBECFF'
## old_high = '#FB8022FF'

complicated_plot <- function(pop){
  ggplot2::ggplot(
    data=pop,
    ggplot2::aes(
      x=Year, y=Population, group=Type,
      color=Type, linetype=Type)) +
  ggplot2::geom_line(size=1) +
  ggplot2::scale_color_manual(
    values=c(Estimate='#30123BFF', 
             `2019 RFA Projection`='#28BBECFF',
             `2022 RFA Projection`='#466BE3FF',
             `2019 Moderate Extrapolation`='#28BBECFF',
             `2019 High Extrapolation`='#FB8022FF',
             `2022 Moderate Extrapolation`='#466BE3FF',
             `2022 High Extrapolation`='#D23105FF')) +
  ggplot2::scale_linetype_manual(
    values=c(Estimate='solid', 
             `2019 RFA Projection`='solid',
             `2022 RFA Projection`='solid',
             `2019 Moderate Extrapolation`='dotted',
             `2019 High Extrapolation`='dotted',
             `2022 Moderate Extrapolation`='dotted',
             `2022 High Extrapolation`='dotted')) +
  # ggplot2::scale_alpha_manual(
  #   values=c(`2019`=0.35, `2022`=1)) +
  # ggplot2::scale_size_manual(
  #   values=c(Original=1, Extended=0.5)) +
  # ggplot2::scale_y_log10()
  ggplot2::theme_bw() +
    ggplot2::theme(legend.position='bottom', legend.title=ggplot2::element_blank())
    }

pop6b %>%
  dplyr::filter(County == 'SOUTH CAROLINA') %>%
  complicated_plot()
```

```{r, eval=F}
## This is old code.
## Extend the projections to 2070 and add the high-demand scenario
pop_extended <- pop_rates %>%
  dplyr::group_by(County) %>%
  dplyr::do({
    basis2020 <- .$`2020`
    basis2035 <- .$`2035`
    avg_growth <- .$avg_growth
    hi_growth_rate <- .$hi_growth_rate
    tibble::tibble(Year = 2020:2070, i = 0:50) %>%
      dplyr::mutate(
        `extended moderate growth` = dplyr::if_else(
          Year<2036, NA_real_, basis2035 + avg_growth*(i-15)),
        `high growth` = basis2020 * (1+hi_growth_rate)^i)}) %>%
  dplyr::ungroup() %>% dplyr::select(-i) %>%
  tidyr::gather(
    'Type', 'Population', `extended moderate growth`, `high growth`) %>%
  dplyr::filter(!is.na(Population))
  
pop_proj2 <- dplyr::bind_rows(
  dplyr::mutate(pop, Type='SC ORFA projection'),
  pop_extended)

## usethis::use_data(pop_proj, overwrite=TRUE)

# For the moderate water-demand scenario, the population projections are extended each year from 2036 to 2070 by adding the average population growth for each county. 
# 
# Population projections for the high demand scenario are calculated by adding 1 to the annual growth rates, raising the growth rates to an exponent equal to the year of the projection (e.g. the 2021 growth rate is raised to an exponent of 1, and the 2070 growth rate is raised to an exponent of 50), and then multiplying by the 2020 population.


```






	


